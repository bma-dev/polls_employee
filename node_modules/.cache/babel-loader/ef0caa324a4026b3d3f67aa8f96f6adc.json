{"ast":null,"code":"var _jsxFileName = \"/Users/amine/Desktop/React-Nanodegree/Final Project/bma_polls/polls_employee/src/components/Dashboard.js\";\nimport { connect } from \"react-redux\";\nimport Unanswered from \"./Unanswered\";\nimport Answered from \"./Answered\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = _ref => {\n  let {\n    authedUser,\n    questions,\n    users\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ml-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-[50px] mt-[35px]\",\n      \"data-testid\": \"heading\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Unanswered, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Dashboard;\n\nconst mapStateToProps = _ref2 => {\n  let {\n    authedUser,\n    questions,\n    users\n  } = _ref2;\n  return {\n    authedUser,\n    questions: Object.values(questions).sort((a, b) => b.timestamp - a.timestamp),\n    users\n  };\n};\n\nexport default connect(mapStateToProps)(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["connect","Unanswered","Answered","Dashboard","authedUser","questions","users","mapStateToProps","Object","values","sort","a","b","timestamp"],"sources":["/Users/amine/Desktop/React-Nanodegree/Final Project/bma_polls/polls_employee/src/components/Dashboard.js"],"sourcesContent":["import {connect} from \"react-redux\";\nimport Unanswered from \"./Unanswered\";\nimport Answered from \"./Answered\";\n\nconst Dashboard = ({authedUser, questions, users}) => {\n\n    return (\n        <div className=\"ml-3\">\n            <h1 className=\"text-4xl font-bold mb-[50px] mt-[35px]\" data-testid=\"heading\">Dashboard</h1>\n            <Unanswered/>\n\n\n\n        </div>\n    );\n}\n\nconst mapStateToProps = ({authedUser, questions, users}) => ({\n    authedUser,\n    questions: Object.values(questions).sort(\n        (a, b) => b.timestamp - a.timestamp\n    ),\n    users,\n});\n\nexport default connect(mapStateToProps)(Dashboard);\n"],"mappings":";AAAA,SAAQA,OAAR,QAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,SAAS,GAAG,QAAoC;EAAA,IAAnC;IAACC,UAAD;IAAaC,SAAb;IAAwBC;EAAxB,CAAmC;EAElD,oBACI;IAAK,SAAS,EAAC,MAAf;IAAA,wBACI;MAAI,SAAS,EAAC,wCAAd;MAAuD,eAAY,SAAnE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,UAAD;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AASH,CAXD;;KAAMH,S;;AAaN,MAAMI,eAAe,GAAG;EAAA,IAAC;IAACH,UAAD;IAAaC,SAAb;IAAwBC;EAAxB,CAAD;EAAA,OAAqC;IACzDF,UADyD;IAEzDC,SAAS,EAAEG,MAAM,CAACC,MAAP,CAAcJ,SAAd,EAAyBK,IAAzB,CACP,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,SAAF,GAAcF,CAAC,CAACE,SADnB,CAF8C;IAKzDP;EALyD,CAArC;AAAA,CAAxB;;AAQA,eAAeN,OAAO,CAACO,eAAD,CAAP,CAAyBJ,SAAzB,CAAf"},"metadata":{},"sourceType":"module"}